/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.vpp.display;

import com.mycompany.vpp.core.EquilibriumCalculator;
import static com.mycompany.vpp.core.ResiduaryCoef.FROUDE_NUMBER;
import java.awt.BorderLayout;
import java.text.DecimalFormat;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author anton
 */
public class ResultForm extends javax.swing.JFrame {
    private EquilibriumCalculator ec=null;
    private EqilibriumSailData esd=null;
    private double reefIn;
    private double leewayIn;
    private double frNumIn;
    private double flattenerIn;
    
    /**
     * Creates new form ResultForm
     */
    public ResultForm(EqilibriumSailData esd, EquilibriumCalculator ec) {
        this.ec=ec;
        this.esd=esd;
        initComponents();
       
    }
    public ResultForm() {
        initComponents();
    }

    public void setEc(EquilibriumCalculator ec) {
        this.ec = ec;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        heelOut = new javax.swing.JTextField();
        boatSpeedOut = new javax.swing.JTextField();
        windAngleOut = new javax.swing.JTextField();
        windSpeedOut = new javax.swing.JTextField();
        sideForceOut = new javax.swing.JTextField();
        driveForceOut = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        frNumInput = new javax.swing.JTextField();
        reefInput = new javax.swing.JTextField();
        flatInput = new javax.swing.JTextField();
        leewayInput = new javax.swing.JTextField();
        backBtn = new javax.swing.JButton();
        calculateBtn = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        resPanel = new javax.swing.JPanel();
        sideForcePanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("True Wind Speed (knots)");

        jLabel2.setText("True Wind Angle (degrees)");

        jLabel3.setText("Optimal Boat Speed (knots)");

        jLabel4.setText("Optimal Heel Angle (degrees)");

        jLabel5.setText("Optimal Side Force");

        jLabel6.setText("Optimal Drive Force");

        heelOut.setFocusable(false);

        boatSpeedOut.setFocusable(false);

        windAngleOut.setFocusable(false);

        windSpeedOut.setFocusable(false);

        sideForceOut.setFocusable(false);

        driveForceOut.setFocusable(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Results");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Input Data");

        jLabel9.setText("Froude Number");

        jLabel10.setText("Reef");

        jLabel11.setText("Flattener");

        jLabel12.setText("Leeway Angle");

        frNumInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frNumInputActionPerformed(evt);
            }
        });

        reefInput.setText("1");

        flatInput.setText("0");

        backBtn.setText("Back");
        backBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backBtnMouseClicked(evt);
            }
        });

        calculateBtn.setText("Calculate");
        calculateBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                calculateBtnMouseClicked(evt);
            }
        });

        jLabel13.setText("Froude Number Ranges: 0.1-0.6");

        jLabel14.setText("Reef and Flattener Ranges: 0-1");

        jLabel15.setText("Leeway Angle Ranges:1-10");

        jLabel16.setText("degrees");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(calculateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(windSpeedOut, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(windAngleOut, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addComponent(boatSpeedOut, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel7)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(sideForceOut, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(heelOut, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel9))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(frNumInput, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(driveForceOut, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(reefInput, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(flatInput, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(leewayInput, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16)))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(windSpeedOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(windAngleOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(boatSpeedOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(heelOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(sideForceOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(driveForceOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(107, 107, 107)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(frNumInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(reefInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(flatInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(leewayInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(calculateBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                    .addComponent(backBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout resPanelLayout = new javax.swing.GroupLayout(resPanel);
        resPanel.setLayout(resPanelLayout);
        resPanelLayout.setHorizontalGroup(
            resPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 984, Short.MAX_VALUE)
        );
        resPanelLayout.setVerticalGroup(
            resPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 430, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout sideForcePanelLayout = new javax.swing.GroupLayout(sideForcePanel);
        sideForcePanel.setLayout(sideForcePanelLayout);
        sideForcePanelLayout.setHorizontalGroup(
            sideForcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        sideForcePanelLayout.setVerticalGroup(
            sideForcePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 430, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sideForcePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(resPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sideForcePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 8, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void frNumInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frNumInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_frNumInputActionPerformed

    private void backBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backBtnMouseClicked
        this.setVisible(false);
        esd.setVisible(true);
    }//GEN-LAST:event_backBtnMouseClicked
    private boolean validateData(){
        if(frNumInput.getText().isEmpty()|| reefInput.getText().isEmpty()|| leewayInput.getText().isEmpty() || flatInput.getText().isEmpty()){
            return false;
        }
        if(Double.parseDouble(frNumInput.getText())<0.15 || Double.parseDouble(frNumInput.getText())>0.6){
            return false;
        }
        if(Double.parseDouble(reefInput.getText())<0 || Double.parseDouble(frNumInput.getText())>1){
            return false;
        }
        if(Double.parseDouble(flatInput.getText())<0 || Double.parseDouble(flatInput.getText())>1){
            return false;
        }
        if(Double.parseDouble(leewayInput.getText())<0 || Double.parseDouble(leewayInput.getText())>10){
            return false;
        }
        return true;
    }
    private void calculateBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calculateBtnMouseClicked
        if(validateData()){
            reefIn=Double.parseDouble(reefInput.getText());
            leewayIn=Double.parseDouble(leewayInput.getText());
            frNumIn=Double.parseDouble(frNumInput.getText());
            flattenerIn=Double.parseDouble(flatInput.getText());
            applyChanges();
        }
    }//GEN-LAST:event_calculateBtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResultForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResultForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResultForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResultForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ResultForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField boatSpeedOut;
    private javax.swing.JButton calculateBtn;
    private javax.swing.JTextField driveForceOut;
    private javax.swing.JTextField flatInput;
    private javax.swing.JTextField frNumInput;
    private javax.swing.JTextField heelOut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField leewayInput;
    private javax.swing.JTextField reefInput;
    private javax.swing.JPanel resPanel;
    private javax.swing.JTextField sideForceOut;
    private javax.swing.JPanel sideForcePanel;
    private javax.swing.JTextField windAngleOut;
    private javax.swing.JTextField windSpeedOut;
    // End of variables declaration//GEN-END:variables

    private void applyChanges() {
        ec.calculateBestSolution(leewayIn, frNumIn, flattenerIn, reefIn);
        DecimalFormat df = new DecimalFormat("####0.00");
        sideForceOut.setText(df.format(ec.getBestSideForce()));
        driveForceOut.setText(df.format(ec.getBestDrive()));
        heelOut.setText(df.format(ec.getBestHeelAngle()));
        boatSpeedOut.setText(df.format(ec.getBestSpeed()));        
        windAngleOut.setText(df.format(ec.getTrueWindAngle()));
        windSpeedOut.setText(df.format(ec.getTrueWindSpeed()));
        
        JFreeChart resGraph=createGraph("Sail Drive Force(=Hull drag) VS Boat Speed", "Drag (N)", "Speed (Knots)","Total Resistance", ec.getTotalRes(), ec.getBestSpeed(), ec.getBestDrive());
        ChartPanel chartPanRes=new ChartPanel(resGraph);
        resPanel.setLayout(new java.awt.BorderLayout());
        resPanel.add(chartPanRes, BorderLayout.CENTER);
        resPanel.validate();;
        JFreeChart sideGraph=createGraph("Side Force VS Boat Speed", "Side Force (N)", "Speed (Knots)", "Keel Side Force", ec.getKeelSideForce(), ec.getBestSpeed(), ec.getBestSideForce());
        ChartPanel chartPanSide=new ChartPanel(sideGraph);
        sideForcePanel.setLayout(new java.awt.BorderLayout());
        sideForcePanel.add(chartPanSide, BorderLayout.CENTER);
        sideForcePanel.validate();;
        
    }

    private JFreeChart createGraph(String graphTitle, String xAxis, String yAxis,String yName, double[][] dataArray, double speed, double optimalData) {
        JFreeChart xylineChart = ChartFactory.createXYLineChart(
         graphTitle ,
         yAxis ,
         xAxis ,
         createDataset(dataArray, speed, optimalData, yName) ,
         PlotOrientation.VERTICAL ,
         true , true , false);
        return  xylineChart;
    }
    private XYDataset createDataset( double[][] dataArray , double speed, double optimalData, String yName) {
        XYSeriesCollection dataset = new XYSeriesCollection( );
        double lwl=ec.getLengthWL();
        double speedArray[]=new double[1];
        if(yName.equals("Keel Side Force")){
            speedArray=new double[dataArray[0].length];
            XYSeries optimalDataXy = new XYSeries( "Side Force" );
            optimalDataXy.add(2, optimalData);
            optimalDataXy.add(15, optimalData);
            dataset.addSeries( optimalDataXy );
            for (int i=0;i<dataArray[0].length;i++){
                double forPow=9.81*lwl;
                speedArray[i]=FROUDE_NUMBER[i]*Math.pow(forPow, 0.5)/0.5144;
            }
            XYSeries speedXY = new XYSeries( "Speed" );
            speedXY.add(speed, 0);
            speedXY.add(speed, 30000);
            dataset.addSeries( speedXY );
        } else if(yName.equals("Total Resistance")){
            speedArray=new double[dataArray[0].length];
            XYSeries optimalDataXy = new XYSeries( "Total Resistance" );
            optimalDataXy.add(5, optimalData);
            optimalDataXy.add(15, optimalData);
            dataset.addSeries( optimalDataXy );
            for (int i=0;i<dataArray[0].length;i++){
                if(dataArray[0].length==7){
                    double forPow=9.81*lwl;
                    speedArray[i]=FROUDE_NUMBER[i+3]*Math.pow(forPow, 0.5)/0.5144; 
                }else{
                    double forPow=9.81*lwl;
                    speedArray[i]=FROUDE_NUMBER[i]*Math.pow(forPow, 0.5)/0.5144;
                }
            }
            XYSeries speedXY = new XYSeries( "Speed" );
            speedXY.add(speed, 0);
            speedXY.add(speed, 15000);
            dataset.addSeries( speedXY );
        }
        XYSeries deg0 = new XYSeries( "Upright" );          
        for(int i=0;i<dataArray[0].length;i++){
            deg0.add(speedArray[i], dataArray[0][i]);
        }

        XYSeries deg10 = new XYSeries( "10 degrees heel" );          
        for(int i=0;i<dataArray[1].length;i++){
            deg10.add(speedArray[i], dataArray[1][i]);
        }
        XYSeries deg20 = new XYSeries( "20 degrees heel" );          
        for(int i=0;i<dataArray[2].length;i++){
            deg20.add(speedArray[i], dataArray[2][i]);
        }
        XYSeries deg30 = new XYSeries( "30 degrees heel" );          
        for(int i=0;i<dataArray[3].length;i++){
            deg30.add(speedArray[i], dataArray[3][i]);
        }
       
        
       
        
        dataset.addSeries( deg0 );          
        dataset.addSeries( deg10 );          
        dataset.addSeries( deg20 );
        dataset.addSeries( deg30);
        
        
        

        return dataset;
    }
}
